{"version":3,"sources":["components/layout/SingedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/auth/SignIn.js","components/auth/SignUp.js","components/dashboard/Notifications.js","components/Customers/CustomerSummary.js","components/Customers/CustomersList.js","components/dashboard/Dashboard.js","components/Customers/CustomerDetails.js","store/actions/customerActions.js","components/Customers/CreateCustomer.js","App.js","serviceWorker.js","store/reducers/customerReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","SignIn","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","signIn","this","authError","onSubmit","htmlFor","onChange","Component","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","authErr","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","Notifications","CustomerSummary","customer","title","authorFirstName","authorLastName","details","moment","createdAt","toDate","calendar","CustomersList","customers","map","key","Dashboard","compose","ordered","cowDetails","firestoreConnect","CustomerDetails","match","params","createCustomer","authorId","add","Date","CreateCustomer","history","push","App","exact","path","component","Boolean","window","location","hostname","initState","customersList","name","customerReducer","action","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00cfc18b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SingedInLinks = (props) =>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li> <NavLink to='/create'>  New Customer </NavLink> </li>\r\n            <li> <a onClick={props.signOut}> Log Out </a> </li>\r\n            <li> <NavLink to='/' className='btn btn-floating pink lightne-1'> {props.profile.initials} </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SingedInLinks)\r\n","export const signIn = (credentials) => {\r\n\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        \r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('webUsers').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err })\r\n        })\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SingedInLinks from './SingedInLinks'\r\nimport SingedOutlinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props\r\n  const links = auth.uid ? <SingedInLinks profile={profile} /> : <SingedOutlinks/>\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Yashas App\r\n        </Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return{\r\n          auth: state.firebase.auth,\r\n          profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { signIn } from \"../../store/actions/authActions\"\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 x-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nexport class SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props\r\n\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 x-depth-0\">Sign Up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            { authError ? <p> {authError} </p> : null }\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authErr\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from 'react';\r\n\r\nconst Notifications = () => {\r\n    return (\r\n        <div>\r\n            <p>Notifications </p>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst CustomerSummary = ({ customer }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 customer-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{customer.title}</span>\r\n        <p>\r\n          Added by {customer.authorFirstName} {customer.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">{customer.details}</p>\r\n        <p className=\"grey-text\">{moment(customer.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomerSummary;","import React from 'react';\r\nimport CustomerSummary from './CustomerSummary';\r\n\r\nconst CustomersList = ({customers}) => {\r\n    return (\r\n        <div className=\"customer-list section\">\r\n         {customers && customers.map( customer =>{\r\n             return( \r\n                 <CustomerSummary customer={customer} key={customer.id}/>\r\n             )\r\n         })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomersList;","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport CustomersList from \"../Customers/CustomersList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { customers, auth} = this.props;\r\n    if(!auth.uid) return <Redirect to ='/sigin' />\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <CustomersList customers={customers} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n   // customers: state.customer.customersList\r\n   customers: state.firestore.ordered.cowDetails,\r\n   auth: state.firebase.auth\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'cowDetails' }\r\n  ])\r\n)(Dashboard);","import React from 'react';\r\n\r\nconst CustomerDetails = (props) => {\r\n    const id = props.match.params.id\r\n\r\n    return (\r\n        <div className=\"container section customer-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"> Customer details - {id}\r\n                        <p> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. </p>\r\n                    </span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>added by the ruck</div>\r\n                    <div>on 3rd dec 2019</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return{\r\n//         auth: state.firebase.auth\r\n//     }\r\n// }\r\n\r\nexport default CustomerDetails;","export const createCustomer = (customer) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        // make async call to database\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid\r\n\r\n        firestore.collection('cowDetails').add({\r\n            ...customer,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_CUSTOMER', customer })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_CUSTOMER_ERROR', err })\r\n        })\r\n    }\r\n} \r\n","import React, { Component } from \"react\";\r\nimport { createCustomer } from '../../store/actions/customerActions'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class CreateCustomer extends Component {\r\n  state = {\r\n    title: '',\r\n    details: ''\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.createCustomer(this.state)\r\n    this.props.history.push('/')\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props\r\n    if(!auth.uid) return <Redirect to ='/sigin' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Add a new Cow </h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Name</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"details\">Details</label>\r\n            <textarea id=\"details\" className=\"materialize-textarea\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCustomer: (customer) => dispatch(createCustomer(customer))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCustomer);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport CustomerDetails from './components/Customers/CustomerDetails';\r\nimport CreateCustomer from './components/Customers/CreateCustomer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className='App'>\r\n          <Navbar />\r\n         \r\n          <Switch>\r\n            <Route exact path='/' component={Dashboard} /> \r\n            <Route path='/customer/:id' component={CustomerDetails} />\r\n            <Route path='/signin' component={SignIn} />\r\n            <Route path='/signup' component={SignUp} />\r\n            <Route path='/create' component={CreateCustomer} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    customersList: [\r\n        { id: '1', name: 'John cena', details: 'from bangalore' },\r\n        { id: '2', name: 'brock lesner', details: 'from chennai' },\r\n        { id: '3', name: 'under taker', details: 'from mumbai' }\r\n    ]\r\n}\r\n\r\nconst customerReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_CUSTOMER':\r\n            console.log(\"created customer from reducer\", action.customer)\r\n            return state\r\n            case 'CREATE_CUSTOMER_ERROR':\r\n            console.log(\"create customer error\", action.err)\r\n            return state\r\n            default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default customerReducer","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\"\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log(\"signout success from reducer\");\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return{\r\n        ...state,\r\n        authErr: null\r\n      }\r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return{\r\n          ...state,\r\n          authErr: action.err.message\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import customerReducer from './customerReducer';\r\nimport authReducer from './authReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    customer: customerReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBaGwsl21i9j0VVTEhmmohPJm_SOcTxhYc\",\r\n    authDomain: \"yashas-dairy.firebaseapp.com\",\r\n    databaseURL: \"https://yashas-dairy.firebaseio.com\",\r\n    projectId: \"yashas-dairy\",\r\n    storageBucket: \"yashas-dairy.appspot.com\",\r\n    messagingSenderId: \"305974104930\",\r\n    appId: \"1:305974104930:web:bb394c04bc917047\"\r\n  }; \r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n//   firebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\n  export default firebase","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport { createStore, applyMiddleware, compose } from \"redux\"\r\nimport rootReducer from \"./store/reducers/rootReducer\"\r\nimport { Provider } from \"react-redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\"\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\"\r\nimport fbConfig from \"./config/fbConfig\"\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig),\r\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'webUsers', attachAuthIsReady: true})\r\n  )\r\n)\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  )\r\n})\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}